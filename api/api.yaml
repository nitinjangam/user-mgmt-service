openapi: 3.0.0
info:
  title: User Authentication and Authorization Microservice API
  version: 1.0.0
  description: API for user registration, authentication, and access control.

servers:
  - url: http://localhost:9999/auth

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    NewUser:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
      required:
        - username
        - email
        - password

    UserCredentials:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password

    UserResponse:
      type: object
      properties:
        user_id:
          type: string
        username:
          type: string
        email:
          type: string

    AuthResponse:
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string
        expires_in:
          type: integer
        refresh_token:
          type: string

    UserProfile:
      type: object
      properties:
        user_id:
          type: string
        username:
          type: string
        email:
          type: string

paths:
  /auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewUser"
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"

  /auth/login:
    post:
      summary: Authenticate user and get an access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCredentials"
      responses:
        '200':
          description: User authenticated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"

  /auth/users/me:
    get:
      summary: Get the authenticated user's profile
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"

  /auth/refresh:
    post:
      summary: Refresh access token using refresh token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                refresh_token:
                  type: string
              required:
                - refresh_token
      responses:
        '200':
          description: New access token generated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"

  /auth/logout:
    post:
      summary: Logout the user and invalidate tokens
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User logged out successfully

  /auth/change-password:
    post:
      summary: Change user's password
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                current_password:
                  type: string
                new_password:
                  type: string
              required:
                - current_password
                - new_password
      responses:
        '200':
          description: Password changed successfully
